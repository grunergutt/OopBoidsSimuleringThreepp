name: C++ CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]  # Testing across multiple platforms
    runs-on: ${{ matrix.os }}  # This ensures the job runs on the OS specified in the matrix

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: actions/setup-cmake@v2
        with:
          cmake-version: '3.21'  # Use a more recent version of CMake

      - name: Set up GCC or MSVC
        if: runner.os == 'Windows'
        run: |
          echo "Using MSVC compiler for Windows"
          set "CXX=cl"
          set "CC=cl"
        else: runner.os == 'ubuntu-latest' || runner.os == 'macos-latest'
        uses: actions/setup-gcc@v1
        with:
          gcc-version: '10'

      - name: Install dependencies
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update
            sudo apt-get install -y libgtest-dev cmake build-essential
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
            choco install visualstudio2019buildtools
          fi

      - name: Build project
        run: |
          mkdir build
          cd build
          cmake ..
          make

      - name: Run tests
        run: |
          cd build
          ./tests  # Adjust if the name of your test executable is different
